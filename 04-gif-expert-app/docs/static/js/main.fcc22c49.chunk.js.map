{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","React","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prevCategories","value","type","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","imges","img","GiftExpertApp","categories","indx","divRoot","document","querySelector","ReactDOM","render"],"mappings":"4MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,IAAMC,SAAS,IAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BT,GAAc,SAACU,GAAD,OAAsBP,GAAtB,mBAAoCO,OAClDN,EAAc,MAKhB,SACE,uBACEO,MAAOR,EACPS,KAAK,OACLC,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOH,a,+BCPdI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAGuBC,UAAUH,GAHjC,8DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAClC,MAAO,CACLF,GAAIA,EACJC,MAAOA,EACPT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QAXb,kBAedM,GAfc,4CAAH,sDCEPM,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAGrC,OAEE,sBAAKa,UAAU,QAAf,UACE,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,kCAAKA,SCLEO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAExB,ECH0B,SAACA,GAC3B,MAA0Bf,IAAMC,SAAS,CACvCqB,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATApC,IAAMqC,WAAU,WACdvB,EAAQC,GAAUuB,MAAK,SAACC,GACtBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAGZ,CAACnB,IAEGoB,EDZwBK,CAAazB,GAA/B0B,EAAb,EAAQnB,KAAYY,EAApB,EAAoBA,QAEpB,OACE,qCACE,6BAAMnB,IACLmB,GAAW,mBAAGJ,UAAU,uCAAb,qBAEZ,qBAAKA,UAAU,8CAAf,SACGW,EAAMjB,KAAI,SAACkB,GAAD,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aEOjBkB,EAjBO,WACpB,MAAoC1C,mBAAS,CAAC,4BAA9C,mBAAO2C,EAAP,KAAmB7C,EAAnB,KAEA,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG6C,EAAWpB,KAAI,SAACT,EAAU8B,GAAX,OACd,cAAC,EAAD,CAAwB9B,SAAUA,GAApBA,YCRlB+B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAO,cAAC,EAAD,IAAmBJ,K","file":"static/js/main.fcc22c49.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = React.useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((prevCategories) => [ inputValue,...prevCategories]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={inputValue}\n        type=\"text\"\n        onChange={handleInputChange}\n      ></input>\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  \n  const url =\n    `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=Enhu5gM26OHBLH0hYgf1tKNVcT2JHheo`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map(({ id, title, images }) => {\n    return {\n      id: id,\n      title: title,\n      url: images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n\n};","import React from 'react'\n\nexport const GifGridItem = ({id, title,url}) => {\n\n  \n  return (\n\n    <div className=\"card \">\n      <img src={url} alt={title}/>\n      <p> {title}</p>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n\n  const { data:imges, loading} = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 >{category}</h3>\n      {loading && <p className=\"animate__animated animate__heartBeat\">Loading</p>}\n\n      <div className=\"card-grid animate__animated animate__bounce\">\n        {imges.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n\n    </>\n  );\n};\n","import React from \"react\";\nimport { getGifs } from \"../helpers/getGif\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = React.useState({\n    data: [],\n    loading: true,\n  });\n\n  React.useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setstate({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\n\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GiftExpertApp = () => {\n  const [categories, setCategories] = useState([\"Neon Genesis Evangelion\"]);\n\n  return (\n    <>\n      <h2>GiftExpertApp </h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category, indx) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GiftExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport GiftExpertApp from \"./GiftExpertApp\";\nimport \"./index.css\";\n\n\nconst divRoot = document.querySelector(\"#root\");\n\nReactDOM.render(<GiftExpertApp />, divRoot);\n"],"sourceRoot":""}